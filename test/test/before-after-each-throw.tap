TAP version 13
    # Subtest: parent
before 1 parent
        # Subtest: child
before 1 child
before 2 child
            # Subtest: grandchild
before 1 grandchild
before 2 grandchild
            ok 1 - the only actual assertion
after 2 grandchild
done
            not ok 2 - test unfinished: grandchild
              ---
              {"at":{"column":7,"file":"test/test/before-after-each-throw.js","line":30},"source":"t.test('grandchild', function (t) {\n"}
              ...
            1..2
            # failed 1 of 2 tests
        not ok 1 - grandchild ___/# time=[0-9.]+(ms)?/~~~
          ---
          {"at":{"column":7,"file":"test/test/before-after-each-throw.js","line":30},"error":"this is fine","results":{"count":2,"fail":1,"ok":false,"pass":1,"plan":{"end":2,"start":1}},"source":"t.test('grandchild', function (t) {\n"}
          ...

        not ok 2 - test point left in queue: not ok - Error: this is fine
          ---
          {"at":{"column":16,"file":"test/test/before-after-each-throw.js","function":"Test.<anonymous>","line":22},"message":"Error: this is fine","source":"var er = new Error('this is fine')\n","test":"child"}
          ...
after 2 child
after 1 child
        1..2
        # failed 2 of 2 tests
    not ok 1 - child ___/# time=[0-9.]+(ms)?/~~~
      ---
      {"at":{"column":5,"file":"test/test/before-after-each-throw.js","line":29},"error":"this is fine","results":{"count":2,"fail":2,"ok":false,"pass":0,"plan":{"end":2,"start":1}},"source":"t.test('child', function (t) {\n"}
      ...

after 1 parent
    1..1
    # failed 1 of 1 tests
not ok 1 - parent ___/# time=[0-9.]+(ms)?/~~~
  ---
  {"at":{"column":3,"file":"test/test/before-after-each-throw.js","line":13},"results":{"count":1,"fail":1,"ok":false,"pass":0,"plan":{"end":1,"start":1}},"source":"t.test('parent', function (t) {\n"}
  ...

1..1
# failed 1 of 1 tests
___/# time=[0-9.]+(ms)?/~~~

